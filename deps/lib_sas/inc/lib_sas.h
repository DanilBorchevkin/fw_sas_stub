#ifndef __LIB_SAS_H
#define __LIB_SAS_H

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
#include <string.h>

typedef enum
{
	SAS_ERR_OK = 0x00,
	SAS_ERR_PARAM,
	SAS_ERROVERFLOW,
	SAS_ERR_DATA,
	SAS_ERR_PARSE,
	SAS_ERR_CRC,
	SAS_ERR_NOT_IMPLEMENTED,
	SAS_ERR_MAX_VAL
} sas_err_t;

typedef enum
{
	SAS_LP_SHUTDOWN = 0x01,
	SAS_LP_STARTUP = 0x02,
	SAS_LP_SOUND_OFF = 0x03,
	SAS_LP_SOUND_ON = 0x04,
	// TODO finish this
	SAS_LP_SEND_GAMES_WON_METER = 0x16,
	SAS_LP_SEND_GAMES_LOST_METER = 0x17,
	// TODO finish this
	SAS_LP_SEND_CARD_INFO = 0x8E,
	// TODO finish this
	//SAS_LP_ = 0x,
	SAS_LP_MAX_VAl
} sas_long_poll_command;

typedef enum
{
	SAS_GC_NO_ACTIVITY = 0x00,
	SAS_GC_SLOT_DOOR_WAS_OPENED = 0x11,
	SAS_GC_SLOT_DOOR_WAS_CLOSED = 0x12,
	SAS_GC_DROP_DOOR_WAS_OPENED = 0x13,
	SAS_GC_DROP_DOOR_WAS_CLOSED = 0x14,
	SAS_GC_CARD_CAGE_WAS_OPENED = 0x15,
	SAS_GC_CARD_CAGE_WAS_CLOSED = 0x16,
	SAS_GC_AC_POWER_WAS_APPLIED = 0x17,
	SAS_GC_AC_POWER_WAS_LOST = 0x18,
	SAS_GC_CASHBOX_DOOR_WAS_OPENED = 0x19,
	SAS_GC_CASHBOX_DOOR_WAS_CLOSED = 0x1A,
	SAS_GC_CASHBOX_WAS_REMOVED = 0x1B,
	SAS_GC_CASHBOX_WAS_INSTALLED = 0x1C,
	SAS_GC_BELLY_DOOR_WAS_OPENED = 0x1D,
	SAS_GC_BELLY_DOOR_WAS_CLOSED = 0x1E,
	SAS_GC_NO_ACTIVITY_WAIT_PLAYER = 0x1F,
	SAS_GC_GENERAL_TILT = 0x20,
	SAS_GC_COIN_IN_TILT = 0x21,
	SAS_GC_COIN_OUT_TILT = 0x22,
	SAS_GC_HOPPER_EMPTY_DETECTED = 0x23,
	SAS_GC_EXTRA_COIN_PAID = 0x24,
	SAS_GC_DIVERTER_MALFUNCTION = 0x25,
	SAS_GC_CASHBOX_FULL_DETECTED = 0x27,
	SAS_GC_BILL_JAM = 0x28,
	SAS_GC_BILL_ACCEPTOR_HW_FAILURE = 0x29,
	SAS_GC_REVERSE_BILL_DETECTED = 0x2A,
	SAS_GC_BILL_REJECTED = 0x2B,
	SAS_GC_COUNTERFEIT_BILL_DETECTED = 0x2C,
	SAS_GC_REVERSE_COIN_IN_DETECTED = 0x2D,
	SAS_GC_CASHBOX_NEAR_FULL_DETECTED = 0x2E,
	SAS_GC_CMOS_RAM_ERROR_RECOVERED = 0x31,
	SAS_GC_CMOS_RAM_ERROR_NO_RECOVERED = 0x32,
	SAS_GC_CMOS_RAM_ERROR_BAD_DEVICE = 0x33,
	SAS_GC_EEPROM_ERROR_DATA_ERROR = 0x34,
	SAS_GC_EEPROM_ERROR_BAD_DEVICE = 0x35,
	SAS_GC_EEPROM_ERROR_DIFFERENT_CHECKSUM = 0x36,
	SAS_GC_EEPROM_ERROR_BAD_CHECKSUM = 0x37,
	SAS_GC_PARTITIONED_EPROM_ERROR_DIFFERENT_CHECKSUM = 0x38,
	SAS_GC_PARTITIONED_EPROM_ERROR_BAD_CHECKSUM = 0x39,
	SAS_GC_MEMORY_ERROR_RESET = 0x3A,
	SAS_GC_LOW_BACKUP_BATTERY_DETECTED = 0x3B,
	SAS_GC_OPERATOR_CHANGED_OPTIONS = 0x3C,
	SAS_GC_CASH_OUT_TICKET_PRINTED = 0x3D,
	SAS_GC_HANDPAY_VALIDATED = 0x3E,
	SAS_GC_VALIDATION_ID_NOT_CONFIGURED = 0x3F,
	SAS_GC_REEL_TILT = 0x40,
	SAS_GC_REEL_1_TILT = 0x41,
	SAS_GC_REEL_2_TILT = 0x42,
	SAS_GC_REEL_3_TILT = 0x43,
	SAS_GC_REEL_4_TILT = 0x44,
	SAS_GC_REEL_5_TILT = 0x45,
	SAS_GC_REEL_MECH_DISCONNECTED = 0x46,
	SAS_GC_1_BILL_ACCEPTED = 0x47,
	SAS_GC_5_BILL_ACCEPTED = 0x48,
	SAS_GC_10_BILL_ACCEPTED = 0x49,
	SAS_GC_20_BILL_ACCEPTED = 0x4A,
	SAS_GC_50_BILL_ACCEPTED = 0x4B,
	SAS_GC_100_BILL_ACCEPTED = 0x4C,
	SAS_GC_2_BILL_ACCEPTED = 0x4D,
	SAS_GC_500_BILL_ACCEPTED = 0x4E,
	SAS_GC_BILL_ACCEPTED = 0x4F,
	SAS_GC_200_BILL_ACCEPTED = 0x50,
	SAS_GC_HANDPAY_IS_PENDING = 0x51,
	SAS_GC_HANDPAY_WAS_RESET = 0x52,
	SAS_GC_NO_PROGRESSIVE_INFO_5_SEC = 0x53,
	SAS_GC_PROGRESSIVE_WIN = 0x54,
	SAS_GC_PLAYER_CANCELLED_HANDPAY_REQUEST = 0x55,
	SAS_GC_SAS_PROGRESSIVE_LEVEL_HIT = 0x56,
	SAS_GC_SYSTEM_VALIDATION_REQUEST = 0x57,
	SAS_GC_PRINTER_COMM_ERR = 0x60,
	SAS_GC_PRINTER_PAPER_OUT_ERR = 0x61,
	SAS_GC_CASH_OUT_BUTTON_PRESSED = 0x66,
	SAS_GC_TICKET_HAS_BEEN_INSERTED = 0x67,
	SAS_GC_TICKET_TRASFER_COMPLETE = 0x68,
	SAS_GC_AFT_TRANSFER_COMPLETE = 0x69,
	SAS_GC_AFT_REQUEST_FOR_HOST_CASH_OUT = 0x6A,
	SAS_GC_AFT_REQUEST_FOR_HOST_TO_CASH_OUT_WIN = 0x6B,
	SAS_GC_AFT_REQUEST_TI_REGISTER = 0x6C,
	SAS_GC_AFT_REGISTRATION_ACK = 0x6D,
	SAS_GC_AFT_REGISTRATION_CANCELLED = 0x6E,
	SAS_GC_GAME_LOCKED = 0x6F,
	SAS_GC_EXCEPTION_BUFFER_OVERFLOW = 0x70,
	SAS_GC_CHANGE_LAMP_ON = 0x71,
	SAS_GC_CHANGE_LAMP_OFF = 0x72,
	SAS_GC_PRINTER_PAPER_LOW = 0x74,
	SAS_GC_PRINTER_POWER_OFF = 0x75,
	SAS_GC_PRINTER_POWER_ON = 0x76,
	SAS_GC_REPLACE_PRINTER_RIBBON = 0x77,
	SAS_GC_PRINTER_CARRIAGE_JAMMED = 0x78,
	SAS_GC_COIN_IN_LOCKOUT_MALFUNCTION = 0x79,
	SAS_GC_GAMING_MACHINE_SOFT_METERS_RESET_TO_ZERO = 0x7A,
	SAS_GC_BILL_VALIDATOR_TOTALS_RESET = 0x7B,
	SAS_GC_LEGACY_BONUS_PAY_AWARDED = 0x7C,
	SAS_GC_GAME_HAS_STARTED = 0x7E,
	SAS_GC_GAME_HAS_ENDED = 0x7F,
	SAS_GC_HOPPER_FULL_DETECTED = 0x80,
	SAS_GC_HOPPER_LEVEL_LOW_DETECTED = 0x81,
	SAS_GC_DISPLAY_METERS_ENTERED = 0x82,
	SAS_GC_DISPLAY_METERS_EXITED = 0x83,
	SAS_GC_SELF_TEST_OPERATOR_MENU_ENTERED = 0x84,
	SAS_GC_SELF_TEST_OPERATOR_MENU_EXITED = 0x85,
	SAS_GC_OUT_OF_SERVICE = 0x86,
	SAS_GC_PLAYER_REQUESTED_DRAW_CARDS = 0x87,
	SAS_GC_REEL_N_STOPPED = 0x88,
	SAS_GC_COIN_CREDIT_WAGERED = 0x89,
	SAS_GC_GAME_RECALL_ENTRY_DISPLAYED = 0x8A,
	SAS_GC_CARD_HELD_NOT_HELD = 0x8B,
	SAS_GC_GAME_SELECTED = 0x8C,
	SAS_GC_COMPONENT_LIST_CHANGED = 0x8E,
	SAS_GC_AUTH_COMPLETE = 0x8F,
	SAS_GC_POWER_OFF_CARD_CAGE_ACCESS = 0x98,
	SAS_GC_POWER_OFF_SLOT_DOOR_ACCESS = 0x99,
	SAS_GC_POWER_OFF_CASHBOX_DOOR_ACCESS = 0x9A,
	SAS_GC_POWER_OFF_DROP_DOOR_ACCESS = 0x9B,
	SAS_GC_MAX_VAL
} sas_general_code_t;

typedef struct __sas_packet
{
	uint8_t address;
	uint8_t command;
	uint8_t * data;
	size_t dataLen;
	uint16_t crc;
} sas_packet_t;

#define SAS_IsWakeup(b)	((b & 0x01) == 0x01)
#define SAS_IsGeneralPoll(b) ((b & 0x80) == 0x80)
#define SAS_To9bit(b) ((((uint16_t) (b)) << 1) & 0xFFFE)
#define SAS_To8bit(b) ((uint8_t)(((b) >> 1) & 0xFF))

sas_err_t SAS_Init(void);
sas_err_t SAS_Deinit(void);
sas_err_t SAS_ParsePollRequest(const uint16_t * inBuffer, size_t inLen, uint16_t *outBuffer, size_t * outLen, size_t outMaxLen);
sas_err_t SAS_Mock(const uint16_t * inBuffer, size_t inLen, uint16_t *outBuffer, size_t * outLen, size_t outMaxLen);

#endif //__LIB_SAS_H
